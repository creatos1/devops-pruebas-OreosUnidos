name: Pruebas Automatizadas

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    # Variables a nivel de job: PYTHONPATH para que pytest encuentre src, y URL base para Newman.
    env:
      PYTHONPATH: ./src
      FASTAPI_URL: http://localhost:8000

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Instalar dependencias Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov httpx

      - name: Instalar Node.js (para Newman)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Instalar Newman
        run: npm install -g newman

      - name: Levantar Uvicorn (background) y esperar API
        run: |
          # Levanta la API una sola vez en background
          uvicorn src.main:app --port 8000 --host 0.0.0.0 &

          # Esperar hasta que la API responda en / (timeout ~30s)
          for i in {1..15}; do
            if curl -s --fail http://localhost:8000/ >/dev/null 2>&1; then
              echo "API lista"
              break
            else
              echo "Esperando API... intento $i"
              sleep 2
            fi
          done

          # Última verificación
          if ! curl -s --fail http://localhost:8000/ >/dev/null 2>&1; then
            echo "ERROR: La API no respondió en http://localhost:8000/"
            exit 1
          fi

      - name: Ejecutar pruebas unitarias (pytest)
        run: |
          pytest tests/test_api.py --cov=src --cov-report=xml
        env:
          FASTAPI_ENV: test

      - name: Ejecutar pruebas funcionales (Newman)
        run: |
          # Newman recibe la variable FASTAPI_URL explícitamente para asegurar el reemplazo en la colección
          newman run tests/api/test_api.postman_collection.json --reporters cli --env-var "FASTAPI_URL=http://localhost:8000"

      - name: Guardar reporte de cobertura
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
